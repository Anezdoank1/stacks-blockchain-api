// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// import * as stacksEncodingNative from 'stacks-encoding-native-js';

import stacksEncodingNative from 'stacks-encoding-native-js';
import * as stacksEncodingNativeStar from 'stacks-encoding-native-js';
import { getVersion } from 'stacks-encoding-native-js';
import { ClarityTypeID, ParsedClarityValueBuffer, ParsedClarityValueList, ParsedClarityValueOptionalUInt, ParsedClarityValuePrincipalStandard, ParsedClarityValueStringAscii, ParsedClarityValueTuple, ParsedClarityValueUInt } from 'stacks-encoding-native-js';
import { stringUtf8CV, cvToString, cvToJSON, cvToHex } from '@stacks/transactions';

const utf8Test1 = cvToString(stringUtf8CV('hello world ðŸ¥”'));
console.log('utf8Test1', utf8Test1);

const utf8Test2 = cvToJSON(stringUtf8CV('hello world ðŸ¥”'));
console.log('utf8Test2', utf8Test2);

const utf8Test3 = cvToHex(stringUtf8CV('hello world ðŸ¥”'));
console.log('utf8Test3', utf8Test3);

const utf8TestN1 = stacksEncodingNative.decodeClarityValue(utf8Test3);
console.log('utf8TestN1', utf8TestN1);

const utf8TestN2 = stacksEncodingNative.decodeClarityValue(cvToHex(stringUtf8CV('hello world')));
console.log('utf8TestN2', utf8TestN2);

const moduleImportTest1 = stacksEncodingNative.getVersion();
console.log('moduleImportTest1', moduleImportTest1);

const moduleImportTest2 = getVersion();
console.log('moduleImportTest2', moduleImportTest2);

const moduleImportTest3 = stacksEncodingNativeStar.getVersion();
console.log('moduleImportTest3', moduleImportTest3);

const enumImportTest1 = ClarityTypeID.BoolFalse;
console.log('enumImportTest1', enumImportTest1);

const memoTest2 = stacksEncodingNative.memoToString('0385180b0409122e622f706f6f6c696e2e636f6d2ffabe6d6da594842fb1be531df010e9489339c2ce500be4a758d42f3f2d48eab40bd771ba01000000000000008ecc586dc48eecad394f780bc5e680b11200c3f6080000000000');
console.log('memoTest2', memoTest2);

const memoTest3 = stacksEncodingNative.memoToString('037c180b2cfabe6d6d5e0eb001a2eaea9c5e39b7f54edd5c23eb6e684dab1995191f664658064ba7dc10000000f09f909f092f4632506f6f6c2f6500000000000000000000000000000000000000000000000000000000000000000000000500f3fa0200');
console.log('memoTest3', memoTest3);

const memoTest4 = stacksEncodingNative.memoToString('0381180b182f5669614254432f4d696e65642062792072796a70707a2f2cfabe6d6d7468749b963232960edad14885a60a0a0231d922e616078b220f92a8d0f1336e100000000000000010aa68a20fa55e1a4ef2a46e77ab2e020000000000');
console.log('memoTest4', memoTest4);
 
const decode1 = stacksEncodingNative.decodeClarityValueToRepr('0x0a010000000000000000000000116c7a7446');
console.log('decode1', decode1);

const decode2 = stacksEncodingNative.decodeClarityValueToRepr('0x0b000000640100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d40');
console.log('decode2', decode2);

const decode1b = stacksEncodingNative.decodeClarityValueToRepr(Buffer.from('0a010000000000000000000000116c7a7446', 'hex'));
console.log('decode1b', decode1b);

const decode2b = stacksEncodingNative.decodeClarityValueToRepr(Buffer.from('0b000000640100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d400100000000000000000000000000c65d40', 'hex'));
console.log('decode2b', decode2b);

const decode3 = stacksEncodingNative.decodeClarityValueList('0x000000060616e685b016b3b6cd9ebf35f38e5ae29392e2acd51d176167653030302d676f7665726e616e63652d746f6b656e0616e685b016b3b6cd9ebf35f38e5ae29392e2acd51d0a746f6b656e2d777374780100000000000000000000000002faf0800100000000000000000000000002faf08001000000000000000000000012f2fd95060a010000000000000000000000116c7a7446');
console.log('decode3', decode3);

const decode3b = stacksEncodingNative.decodeClarityValueList('0x0000');
console.log('decode3b', decode3b);

const decode3c = stacksEncodingNative.decodeClarityValueList('0x');
console.log('decode3c', decode3c);

// contract-call
let decode4 = stacksEncodingNative.decodeTransaction('0x00000000010400b1907a5f15e25dfbb7487a032d37f61205d6127600000000000001ba0000000000002710000004fbc868d0ca4a9145f43a396c796bcbb2888a5519afe08ab80afc3e1d4f86607e66f795e59efa824c12782870f8fa29aaf03eb0380fde6e70b8bbf2e2a5f8c8030200000002010216b1907a5f15e25dfbb7487a032d37f61205d6127616e685b016b3b6cd9ebf35f38e5ae29392e2acd51d176167653030302d676f7665726e616e63652d746f6b656e04616c65780100000012f2fd9506000316e685b016b3b6cd9ebf35f38e5ae29392e2acd51d0a616c65782d7661756c7403000000002c9ad3150216e685b016b3b6cd9ebf35f38e5ae29392e2acd51d1766697865642d7765696768742d706f6f6c2d76312d30310b737761702d68656c706572000000060616e685b016b3b6cd9ebf35f38e5ae29392e2acd51d176167653030302d676f7665726e616e63652d746f6b656e0616e685b016b3b6cd9ebf35f38e5ae29392e2acd51d0a746f6b656e2d777374780100000000000000000000000002faf0800100000000000000000000000002faf08001000000000000000000000012f2fd95060a010000000000000000000000116c7a7446');
console.log('decode4', decode4);

// contract-call
let decode5 = stacksEncodingNative.decodeTransaction('0000000001040089f5fd1f719e4449c980de38e3504be6770a2698000000000000014500000000000001f400008b510c9e20dc22040953d9d7eabf2038008fa4d89a5a6cb78bb9d513e75cd0df3924af9ce3b5f185705bc2f6ba3071710ec6a8803ed6da4addc40a05a01ee0f503020000000102021689f5fd1f719e4449c980de38e3504be6770a269816a6a7a70f41adbe8eae708ed7ec2cbf41a272182014626974636f696e2d6d6f6e6b6579732d6c61627314626974636f696e2d6d6f6e6b6579732d6c61627301000000000000000000000000000008ba1002162bcf9762d5b90bc36dc1b4759b1727690f92ddd30e6d61726b6574706c6163652d76340a6c6973742d6173736574000000040616a6a7a70f41adbe8eae708ed7ec2cbf41a272182014626974636f696e2d6d6f6e6b6579732d6c61627301000000000000000000000000000008ba010000000000000000000000000c84588001000000000000000000000000000000c8');
console.log('decode5', decode5);

// token-transfer
let decode6 = stacksEncodingNative.decodeTransaction('00000000010400d27548439b50c8d8ca86756151bd6e07059510a0000000000000002f00000000000027100000ffdf728bc8d1423ba751e164a153b160c48980e727c98971816096534ee6b3a40e81b31786a547cc64fcb52d592939ec5a5886d8ec8053a91e22e76cb9ef4d4403020000000000051634ddc468605d7e5b65f2970002ae55b554f5dda400000000001e848000000000000000000000000000000000000000000000000000000000000000000000');
console.log('decode6', decode6);

// smart-contract
let decode7 = stacksEncodingNative.decodeTransaction('000000000104008e78fd48543bb20a9f9b78558ab5a98388dc82a600000000000000ff00000000000b71b000009539c9b4514276db6376d2525251446719e884b0a996ac9018815fe9043fcc751798f7f02ea01c1d1673d163ab18bd048da828bc2f1716666b54ea93370d4031030100000000011566726f7a656e2d737461636b732d706f70732d763100000b4428646566696e652d6e6f6e2d66756e6769626c652d746f6b656e2066726f7a656e2d737461636b732d706f70732075696e74290a0a3b3b2053746f726167650a28646566696e652d6d617020746f6b656e2d636f756e74207072696e636970616c2075696e74290a0a3b3b20446566696e6520436f6e7374616e74730a28646566696e652d636f6e7374616e7420434f4e54524143542d4f574e45522074782d73656e646572290a28646566696e652d636f6e7374616e74204552522d4e4f542d415554484f52495a45442028657272207534303129290a28646566696e652d636f6e7374616e74204552522d4d455441444154412d46524f5a454e2028657272207535303529290a28646566696e652d636f6e7374616e74204552522d4d494e542d414c52454144592d5345542028657272207535303629290a0a3b3b20446566696e65205661726961626c65730a28646566696e652d646174612d766172206c6173742d69642075696e74207530290a28646566696e652d646174612d766172206d657461646174612d66726f7a656e20626f6f6c2066616c7365290a28646566696e652d646174612d76617220626173652d7572692028737472696e672d617363696920323536292022697066733a2f2f516d617948436f593235656e7234586d4251787956464b535539746b52507936344a79774e4444614b3963384d542f66726f7a656e2d737461636b732d706f70732d7b69647d2e6a736f6e22290a28646566696e652d636f6e7374616e7420636f6e74726163742d7572692022697066733a2f2f516d617948436f593235656e7234586d4251787956464b535539746b52507936344a79774e4444614b3963384d542f66726f7a656e2d737461636b732d706f70732e6a736f6e22290a28646566696e652d6d6170206d696e742d6164647265737320626f6f6c207072696e636970616c290a0a3b3b20546f6b656e20636f756e7420666f72206163636f756e740a28646566696e652d726561642d6f6e6c7920286765742d62616c616e636520286163636f756e74207072696e636970616c29290a20202864656661756c742d746f2075300a20202020286d61702d6765743f20746f6b656e2d636f756e74206163636f756e742929290a0a3b3b205349503030393a205472616e7366657220746f6b656e20746f206120737065636966696564207072696e636970616c0a28646566696e652d7075626c696320287472616e73666572202869642075696e7429202873656e646572207072696e636970616c292028726563697069656e74207072696e636970616c29290a20204552522d4e4f542d415554484f52495a4544290a0a3b3b205349503030393a2047657420746865206f776e6572206f66207468652073706563696669656420746f6b656e2049440a28646566696e652d726561642d6f6e6c7920286765742d6f776e6572202869642075696e7429290a20203b3b204d616b65207375726520746f207265706c6163652066726f7a656e2d737461636b732d706f70730a2020286f6b20286e66742d6765742d6f776e65723f2066726f7a656e2d737461636b732d706f70732069642929290a0a3b3b205349503030393a2047657420746865206c61737420746f6b656e2049440a28646566696e652d726561642d6f6e6c7920286765742d6c6173742d746f6b656e2d6964290a2020286f6b20287661722d676574206c6173742d69642929290a0a3b3b205349503030393a204765742074686520746f6b656e205552492e20596f752063616e2073657420697420746f20616e79206f74686572205552490a28646566696e652d726561642d6f6e6c7920286765742d746f6b656e2d757269202869642075696e7429290a2020286f6b2028736f6d6520287661722d67657420626173652d757269292929290a0a28646566696e652d726561642d6f6e6c7920286765742d636f6e74726163742d757269290a2020286f6b20636f6e74726163742d75726929290a0a3b3b204d696e74206e6577204e46540a3b3b2063616e206f6e6c792062652063616c6c65642066726f6d20746865204d696e740a28646566696e652d7075626c696320286d696e7420286e65772d6f776e6572207072696e636970616c29202869642075696e7429290a2020286c6574200a2020202028286f776e65722d62616c616e636520286765742d62616c616e6365206e65772d6f776e65722929290a20202020286173736572747321202863616c6c65642d66726f6d2d6d696e7429204552522d4e4f542d415554484f52495a4544290a20202020287472792120286e66742d6d696e743f2066726f7a656e2d737461636b732d706f7073206964206e65772d6f776e657229290a20202020286d61702d73657420746f6b656e2d636f756e740a2020202020206e65772d6f776e65720a202020202020282b206f776e65722d62616c616e636520753129290a20202020286f6b2074727565290a2020290a290a0a28646566696e652d7075626c696320286275726e202869642075696e742920286f776e6572207072696e636970616c29290a2020286c6574200a2020202028286f776e65722d62616c616e636520286765742d62616c616e6365206f776e65722929290a20202020286173736572747321202863616c6c65642d66726f6d2d6d696e7429204552522d4e4f542d415554484f52495a4544290a20202020287472792120286e66742d6275726e3f2066726f7a656e2d737461636b732d706f7073206964206f776e657229290a20202020286d61702d73657420746f6b656e2d636f756e740a2020202020206f776e65720a202020202020282d206f776e65722d62616c616e636520753129290a20202020286f6b2074727565290a2020290a290a0a3b3b205365742062617365207572690a28646566696e652d7075626c696320287365742d626173652d75726920286e65772d626173652d7572692028737472696e672d6173636969203235362929290a202028626567696e0a20202020286173736572747321202869732d657120636f6e74726163742d63616c6c657220434f4e54524143542d4f574e455229204552522d4e4f542d415554484f52495a4544290a2020202028617373657274732120286e6f7420287661722d676574206d657461646174612d66726f7a656e2929204552522d4d455441444154412d46524f5a454e290a20202020287661722d73657420626173652d757269206e65772d626173652d757269290a20202020286f6b20747275652929290a0a3b3b20467265657a65206d657461646174610a28646566696e652d7075626c69632028667265657a652d6d65746164617461290a202028626567696e0a20202020286173736572747321202869732d657120636f6e74726163742d63616c6c657220434f4e54524143542d4f574e455229204552522d4e4f542d415554484f52495a4544290a20202020287661722d736574206d657461646174612d66726f7a656e2074727565290a20202020286f6b20747275652929290a0a3b3b204d616e61676520746865204d696e740a28646566696e652d70726976617465202863616c6c65642d66726f6d2d6d696e74290a20202869732d657120636f6e74726163742d63616c6c65722028756e777261702120286d61702d6765743f206d696e742d616464726573732074727565292066616c73652929290a0a3b3b2063616e206f6e6c792062652063616c6c6564206f6e63650a28646566696e652d7075626c696320287365742d6d696e742d61646472657373290a202028626567696e0a2020202028617373657274732120286d61702d696e73657274206d696e742d6164647265737320747275652074782d73656e64657229204552522d4d494e542d414c52454144592d534554290a20202020286f6b20287072696e742074782d73656e64657229292929');
console.log('decode7', decode7);

// coinbase
let decode8 = stacksEncodingNative.decodeTransaction('00000000010400b00de0cc7b5e518f7d1e43d6e5ecbd52e0cd0c2f0000000000001ddc00000000000000000001827095db6a9de80e51323bc96a926874999472634fbdfd5adc36df48e2d6b01c7505244fba66e8812b761a2ea1f1e98253139db1ccd1c7ffaa14208dd489bf69010200000000040000000000000000000000000000000000000000000000000000000000000000');
console.log('decode8', decode8);

// sponsored tx
let decode9 = stacksEncodingNative.decodeTransaction('000000000105001f6000287c9ed40ba39b27fc4257ff30cda4e91d000000000000005c0000000000000000000188f35fb5444ebdfcfced4b267aa76e60b90fc38ff7f7c8d770fc21407a26650a78aded3af77a5f0d7ca2ba7dabeff0579ec1d891e715c55237cfd5737e42378000661506d48705f932af21abcff23046b216886e840000000000000a1a000000000007a12000003fe006c2b46c5c6a16bc0af6f065c63d6e6c5a40e51fec26a9768caab0acd7ca42401d9c8030f120d2005388c1d04c602a3a9177eb26534a4fd6a3897686b1490302000000010002161f6000287c9ed40ba39b27fc4257ff30cda4e91d0100000000bda999040216debc095099629badb11b9d5335e874d12f1f1d450e73656e642d6d616e792d6d656d6f0973656e642d6d616e79000000010b0000001e0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05162c34acd88561d6905f635e8eb59a36395b8c42a1047573747801000000000000000000000000002e640b0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516f1818ba832287fc71375c3e78bae2c8c64f6bb01047573747801000000000000000000000000008d51b10c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516267248c930110d411248d9ff16e63a8ddfa0c641047573747801000000000000000000000000121d39d80c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516e73e15214dab160f2b78c935279e99a4a8ce83fc047573747801000000000000000000000000003beba90c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05166176366f88666f63ee0280db409fc8bcdc5eccbd047573747801000000000000000000000000056fb9430c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516cb8de306c17412fc869c8337fa7b6b6f3a17cc160475737478010000000000000000000000000014018b0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516477b4de6bfcf52f8cfec6854720b7a6982193eb704757374780100000000000000000000000005f518e20c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051668210b7f12b4ee43f374da9a59a51ecc8d0d89230475737478010000000000000000000000000029a8780c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05163b8e6ef49d23e432100aeca022c89555b7209aad04757374780100000000000000000000000010152ebb0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051694401aeb5474061ac390f723cb1826feb1b90448047573747801000000000000000000000000482a34380c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051686e0feea7bd59ae51dd0d2e47c7220406348e73804757374780100000000000000000000000000c938550c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516a52961a0d54cb3b9ce9a7092440dff4573cff58c04757374780100000000000000000000000000f19d340c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516130b7aee04f3eee627e103d3c33aea1d5339087d047573747801000000000000000000000000032aadd60c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05165db3d733033684784ebfa931b8e5f228bb247c4d04757374780100000000000000000000000000adf7280c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051600da0575e398c7b3d64f3df9d32ec57b9c0af3f704757374780100000000000000000000000000adf7280c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051607b7982ea3aaff67270d86e62436b0d08ea8d17804757374780100000000000000000000000010bc307b0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516fd048b0a4e906580e4a5281ebef59f2d60585ac4047573747801000000000000000000000000076efb580c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05164ecd67a6d4ca15c0cb9cf7cc0bc0594ba10ce4ee047573747801000000000000000000000000016a6c4c0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516f6641fafd4cdb742214558a43a5effeeb6061d76047573747801000000000000000000000000002a5b460c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05166af9a2a4e295c9b23b7304f4bd14082b7101e7c304757374780100000000000000000000000002b299d90c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05166c317c39e65133aa7a414eb75e516dc59536f55004757374780100000000000000000000000018b0beba0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516e13a94997d076788fa000588d7bfb053b2cfa3c3047573747801000000000000000000000000003b2c660c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05165b7ee1d697120fbe6a761df99cddb46774cf1ca50475737478010000000000000000000000000005da110c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051688e4220b60f2222e115d8a8b1e46b09aed368854047573747801000000000000000000000000056d4c270c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051609973469a88ffcbf70651d8078442b9eedd47f590475737478010000000000000000000000000002e6410c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05162bbf6ea8291431ec60fcb86c066ff375071ce7d8047573747801000000000000000000000000001e57d60c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516fbd72ce502f8a46db5a6e473a4e2c8830bc1a43904757374780100000000000000000000000001a593880c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f051667a3c0f1b06075e9f7b9fa4d3e5d6492041c295a0475737478010000000000000000000000000005cb390c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f0516cba8da4a454ae7ad02cb71fb523ddd720d73ad3a0475737478010000000000000000000000000176f41c0c00000003046d656d6f0200000017726577617264206379636c6520233236207061796f757402746f05169bb88a9c3db00f126f08f380d28b348458ebb6f7047573747801000000000000000000000000025c3d73');
console.log('decoded9', decode9);

// 26, 'cd1f5bc9aa49e7417cee3e5dba1a92567da41af6'
// ST36HYPY9N94YEGBWXRZ5VEGTJ9B7V90TYTM9HGTJ
let decode10 = stacksEncodingNative.stacksAddressFromParts(26, Buffer.from('cd1f5bc9aa49e7417cee3e5dba1a92567da41af6', 'hex'));
console.log('decode10', decode10);

let decode11 = stacksEncodingNative.decodeClarityValue(Buffer.from('070b00000004070c000000020e656e7469746c65642d746f6b656e0100000000000000000000000021db1fb309746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e010000000000000000000000001babc71009746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000180b562d09746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000154fd89209746f2d72657475726e0100000000000000000000000000000000', 'hex'));
console.log('decode11', decode11);

let decode11b = stacksEncodingNative.decodeClarityValue('070b00000004070c000000020e656e7469746c65642d746f6b656e0100000000000000000000000021db1fb309746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e010000000000000000000000001babc71009746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000180b562d09746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000154fd89209746f2d72657475726e0100000000000000000000000000000000');
console.log('decode11b', decode11b);

let decode11c = stacksEncodingNative.decodeClarityValue('0x070b00000004070c000000020e656e7469746c65642d746f6b656e0100000000000000000000000021db1fb309746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e010000000000000000000000001babc71009746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000180b562d09746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000154fd89209746f2d72657475726e0100000000000000000000000000000000');
console.log('decode11c', decode11c);

let decode12 = stacksEncodingNative.decodeClarityValue(Buffer.from('070b00000004070c000000020e656e7469746c65642d746f6b656e0100000000000000000000000021db1fb309746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e010000000000000000000000001babc71009746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000180b562d09746f2d72657475726e0100000000000000000000000000000000070c000000020e656e7469746c65642d746f6b656e01000000000000000000000000154fd89209746f2d72657475726e0100000000000000000000000000000000', 'hex'), true);
console.log('decode12', decode12);

let decode13 = stacksEncodingNative.decodePostConditions('020000000200021642779fa5c48120aa60c18eb05a164bad77bf2cdd0100000000002ab9800103167e9152cdbbb9fef066df4e1b88b19bcb313acc901b6c69717569646974792d746f6b656e2d76356b6d6e77733563676c1608633eac058f2e6ab41613a0a537c7ea1a79cdd20f6d69616d69636f696e2d746f6b656e096d69616d69636f696e030000000000000423');
console.log('decode13', decode13);

let decode14 = stacksEncodingNative.decodeClarityValue('0x0c00000003096e616d657370616365020000000378797a0a70726f706572746965730c000000050b6c61756e636865642d61740a010000000000000000000000000000000e086c69666574696d650100000000000000000000000000000001106e616d6573706163652d696d706f7274051abf8e82623c380cd870931d48b525d5e12a4d67820e70726963652d66756e6374696f6e0c0000000504626173650100000000000000000000000000000001076275636b6574730bf6566660100000000000000000000000000000001116e6f2d766f77656c2d646973636f756e740100000000000000000000000000000001116e6f6e616c7068612d646973636f756e7401000000000000000000000000000000010b72657665616c65642d61740100000000000000000000000000000006067374617475730d000000057265616479');
console.log('decode14', decode14);

function test_bns_attachment() {
  const ff = ClarityTypeID.BoolTrue;
  console.log('___ENUM___: ' + ff);

  const cl_val = stacksEncodingNative.decodeClarityValue<
    ParsedClarityValueTuple<{
      namespace: ParsedClarityValueBuffer;
      status: ParsedClarityValueStringAscii;
      properties: ParsedClarityValueTuple<{
        'launched-at': ParsedClarityValueOptionalUInt;
        lifetime: ParsedClarityValueUInt;
        'revealed-at': ParsedClarityValueUInt;
        'namespace-import': ParsedClarityValuePrincipalStandard;
        'price-function': ParsedClarityValueTuple<{
          base: ParsedClarityValueUInt;
          coeff: ParsedClarityValueUInt;
          'no-vowel-discount': ParsedClarityValueUInt;
          'nonalpha-discount': ParsedClarityValueUInt;
          buckets: ParsedClarityValueList<ParsedClarityValueUInt>;
        }>;
      }>;
    }>
  >('0x0c00000003096e616d657370616365020000000378797a0a70726f706572746965730c000000050b6c61756e636865642d61740a010000000000000000000000000000000e086c69666574696d650100000000000000000000000000000001106e616d6573706163652d696d706f7274051abf8e82623c380cd870931d48b525d5e12a4d67820e70726963652d66756e6374696f6e0c0000000504626173650100000000000000000000000000000001076275636b6574730bf6566660100000000000000000000000000000001116e6f2d766f77656c2d646973636f756e740100000000000000000000000000000001116e6f6e616c7068612d646973636f756e7401000000000000000000000000000000010b72657665616c65642d61740100000000000000000000000000000006067374617475730d000000057265616479');
  if (cl_val.type_id !== ClarityTypeID.Tuple) {
    throw new Error('Invalid clarity type');
  }

  const namespaceCV = cl_val.data.namespace;
  const namespace = namespaceCV.buffer.toString();
  const statusCV = cl_val.data.status;
  const status = statusCV.data;
  const properties = cl_val.data.properties;

  const launched_atCV = properties.data['launched-at'];
  const launched_at =
  launched_atCV.type_id === ClarityTypeID.OptionalSome ? parseInt(launched_atCV.value.value) : 0;
  const lifetimeCV = properties.data.lifetime;
  const lifetime = BigInt(lifetimeCV.value);
  const revealed_atCV = properties.data['revealed-at'];
  const revealed_at = BigInt(revealed_atCV.value);
  const addressCV = properties.data['namespace-import'];
  const address = addressCV.address;

  const price_function = properties.data['price-function'];

  const baseCV = price_function.data.base;
  const base = BigInt(baseCV.value);
  const coeffCV = price_function.data.coeff;
  const coeff = BigInt(coeffCV.value);
  const no_vowel_discountCV = price_function.data['no-vowel-discount'];
  const no_vowel_discount = BigInt(no_vowel_discountCV.value);
  const nonalpha_discountCV = price_function.data['nonalpha-discount'];
  const nonalpha_discount = BigInt(nonalpha_discountCV.value);
  const bucketsCV = price_function.data.buckets;

  const buckets: bigint[] = [];
  const listCV = bucketsCV.list;
  for (let i = 0; i < listCV.length; i++) {
    const cv = listCV[i];
    if (cv.type_id === ClarityTypeID.UInt) {
      buckets.push(BigInt(cv.value));
    }
  }

  const namespaceBns = {
    namespace_id: namespace,
    address: address,
    base: Number(base),
    coeff: Number(coeff),
    launched_at: launched_at,
    lifetime: Number(lifetime),
    no_vowel_discount: Number(no_vowel_discount),
    nonalpha_discount: Number(nonalpha_discount),
    reveal_block: Number(revealed_at),
    status: status,
    buckets: buckets.toString(),
    canonical: true,
  };
  return namespaceBns;
}
test_bns_attachment();

console.log('done');
